
const { ApplicationCommandOptionType, EmbedBuilder } = require('discord.js');
const maxVol = require("../config.js").opt.maxVol;
const db = require("../mongoDB");

module.exports = {
  name: "volume",
  description: "–ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏.",
  permissions: "0x0000000000000800",
  options: [{
    name: 'volume',
    description: '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –≥—Ä–æ–º–∫–æ—Å—Ç—å.',
    type: ApplicationCommandOptionType.Integer,
    required: true
  }],
  voiceChannel: true,
  run: async (client, interaction) => {
    try {
      const queue = client.player.getQueue(interaction.guild.id);
      if (!queue || !queue.playing) {
        return interaction.reply({ content: '‚ö†Ô∏è –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—É–∑—ã–∫–∞ –Ω–µ –∏–≥—Ä–∞–µ—Ç!!', ephemeral: true });
      }

      const vol = parseInt(interaction.options.getInteger('volume'));

      if (!vol) {
        return interaction.reply({
          content: `Current volume: **${queue.volume}** üîä\n–ß—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –º–µ–∂–¥—É \`1\` –∏ \`${maxVol}\`.`,
          ephemeral: true
        });
      }

      if (queue.volume === vol) {
        return interaction.reply({ content: '–¢–µ–∫—É—â–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å **' + vol + '**!', ephemeral: true });
      }

      if (vol < 1 || vol > maxVol) {
        return interaction.reply({
          content: `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –º–µ–∂–¥—É \`1\` –∏ \`${maxVol}\`.`,
          ephemeral: true
        });
      }

      const success = queue.setVolume(vol);

      if (success) {
        const embed = new EmbedBuilder()
          .setColor('#d291fe')
          .setAuthor({
        name: 'Your Music! Your Rules!',
        iconURL: 'https://cdn.discordapp.com/attachments/1156866389819281418/1157528025739563088/5657-volume-icon.png?ex=6518ef7b&is=65179dfb&hm=1797c2830537a28b5c6a57564517cc509146d02383a69fb4239d7b5d55aceeed&', 
        url: 'https://discord.gg/FUEHs7RCqz'
    })
          .setDescription(`**–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ : ** **${vol}/${maxVol}**`);

        return interaction.reply({ embeds: [embed] });
      } else {
        return interaction.reply({ content: '‚ùå –ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ –ø–æ –ø–ª–∞–Ω—É –ø—Ä–∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏.', ephemeral: true });
      }
    } catch (e) {
      console.error(e);
    }
  },
};


